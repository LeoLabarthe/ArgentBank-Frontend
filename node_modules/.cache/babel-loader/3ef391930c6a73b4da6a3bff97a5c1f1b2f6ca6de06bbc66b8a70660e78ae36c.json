{"ast":null,"code":"import { GET_USERPROFILE, EDIT_USERNAME } from \"./type.actions\";\n\n// Action pour récupérer le profil utilisateur\nexport const userProfile = userData => {\n  return {\n    type: GET_USERPROFILE,\n    payload: userData\n  };\n};\n\n// Action pour mettre à jour le nom d'utilisateur, prénom, et nom de famille\nexport const updateUsername = userData => {\n  return async dispatch => {\n    try {\n      const token = localStorage.getItem('authToken'); // Récupère le token pour l'authentification\n      const response = await fetch('http://localhost:3001/api/v1/user/profile', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}` // Authentifie avec le token\n        },\n        body: JSON.stringify(userData) // Envoie les nouvelles informations\n      });\n      const data = await response.json();\n      if (response.ok) {\n        dispatch({\n          type: EDIT_USERNAME,\n          payload: userData // Met à jour les informations utilisateur dans le store Redux\n        });\n      } else {\n        console.error('Failed to update user data:', data.message);\n      }\n    } catch (error) {\n      console.error('Network error:', error);\n    }\n  };\n};","map":{"version":3,"names":["GET_USERPROFILE","EDIT_USERNAME","userProfile","userData","type","payload","updateUsername","dispatch","token","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","error","message"],"sources":["C:/ArgentBank-Frontend/src/redux/actions/user.actions.jsx"],"sourcesContent":["import { GET_USERPROFILE, EDIT_USERNAME } from \"./type.actions\";\r\n\r\n// Action pour récupérer le profil utilisateur\r\nexport const userProfile = (userData) => {\r\n  return {\r\n    type: GET_USERPROFILE,\r\n    payload: userData,\r\n  };\r\n};\r\n\r\n// Action pour mettre à jour le nom d'utilisateur, prénom, et nom de famille\r\nexport const updateUsername = (userData) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const token = localStorage.getItem('authToken');  // Récupère le token pour l'authentification\r\n      const response = await fetch('http://localhost:3001/api/v1/user/profile', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`,  // Authentifie avec le token\r\n        },\r\n        body: JSON.stringify(userData),  // Envoie les nouvelles informations\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        dispatch({\r\n          type: EDIT_USERNAME,\r\n          payload: userData,  // Met à jour les informations utilisateur dans le store Redux\r\n        });\r\n      } else {\r\n        console.error('Failed to update user data:', data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Network error:', error);\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,aAAa,QAAQ,gBAAgB;;AAE/D;AACA,OAAO,MAAMC,WAAW,GAAIC,QAAQ,IAAK;EACvC,OAAO;IACLC,IAAI,EAAEJ,eAAe;IACrBK,OAAO,EAAEF;EACX,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMG,cAAc,GAAIH,QAAQ,IAAK;EAC1C,OAAO,MAAOI,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAE;MAClD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;QACxEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUN,KAAK,EAAE,CAAG;QACvC,CAAC;QACDO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,QAAQ,CAAC,CAAG;MACnC,CAAC,CAAC;MAEF,MAAMe,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACfb,QAAQ,CAAC;UACPH,IAAI,EAAEH,aAAa;UACnBI,OAAO,EAAEF,QAAQ,CAAG;QACtB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLkB,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEJ,IAAI,CAACK,OAAO,CAAC;MAC5D;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}